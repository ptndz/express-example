{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Role"
							}
						],
						"nullable": true
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/File"
						},
						"type": "array"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"username",
					"email",
					"name",
					"image",
					"password",
					"role",
					"files",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"root": {
						"type": "boolean"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/Permissions"
						},
						"type": "array"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"root",
					"users",
					"permissions",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Permissions": {
				"properties": {
					"id": {
						"type": "string"
					},
					"role_id": {
						"type": "string"
					},
					"resource": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"roles": {
						"$ref": "#/components/schemas/Role"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"role_id",
					"resource",
					"value",
					"roles",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"File": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"disk": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"size": {
						"type": "string"
					},
					"checksum": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"disk",
					"name",
					"path",
					"type",
					"size",
					"checksum",
					"user",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_User_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.id-or-createAt-or-updateAt__": {
				"properties": {
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/File"
						},
						"type": "array"
					}
				},
				"required": [
					"username",
					"email",
					"name",
					"image",
					"password",
					"role",
					"files"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id-or-createAt-or-updateAt_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id-or-createAt-or-updateAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IUserPayload": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_User.id-or-createAt-or-updateAt_"
					},
					{
						"properties": {
							"roleId": {
								"type": "string"
							}
						},
						"required": [
							"roleId"
						],
						"type": "object"
					}
				]
			},
			"Pagination_User_": {
				"properties": {
					"total": {
						"type": "number",
						"format": "double"
					},
					"per_page": {
						"type": "number",
						"format": "double"
					},
					"current_page": {
						"type": "number",
						"format": "double"
					},
					"last_page": {
						"type": "number",
						"format": "double"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					}
				},
				"required": [
					"total",
					"per_page",
					"current_page",
					"last_page",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_Pagination_User__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Pagination_User_"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_User_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/File"
						},
						"type": "array"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IResponse_Role_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Role.Exclude_keyofRole.id-or-createAt-or-updateAt-or-users__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"root": {
						"type": "boolean"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/Permissions"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"description",
					"root",
					"permissions"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Role.id-or-createAt-or-updateAt-or-users_": {
				"$ref": "#/components/schemas/Pick_Role.Exclude_keyofRole.id-or-createAt-or-updateAt-or-users__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IRolePayload": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_Role.id-or-createAt-or-updateAt-or-users_"
					},
					{
						"properties": {
							"$clear": {},
							"$add": {},
							"permissions": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				]
			},
			"IResponse_Array_Role__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Role"
						},
						"type": "array"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IRolePayload_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"root": {
						"type": "boolean"
					},
					"permissions": {
						"allOf": [
							{
								"items": {
									"$ref": "#/components/schemas/Permissions"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						]
					},
					"$add": {},
					"$clear": {}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IResponse_Permissions_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Permissions"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Permissions.Exclude_keyofPermissions.id-or-createAt-or-updateAt__": {
				"properties": {
					"role_id": {
						"type": "string"
					},
					"resource": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"roles": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"role_id",
					"resource",
					"value",
					"roles"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Permissions.id-or-createAt-or-updateAt_": {
				"$ref": "#/components/schemas/Pick_Permissions.Exclude_keyofPermissions.id-or-createAt-or-updateAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IPermissionPayload": {
				"$ref": "#/components/schemas/Omit_Permissions.id-or-createAt-or-updateAt_"
			},
			"IResponse_Array_Permissions__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Permissions"
						},
						"type": "array"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_Array_string__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IPermissionPayload_": {
				"properties": {
					"role_id": {
						"type": "string"
					},
					"resource": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"roles": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Media": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"url": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					},
					"disk": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"url",
					"name",
					"size",
					"type",
					"disk",
					"path",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pagination_Media_": {
				"properties": {
					"total": {
						"type": "number",
						"format": "double"
					},
					"per_page": {
						"type": "number",
						"format": "double"
					},
					"current_page": {
						"type": "number",
						"format": "double"
					},
					"last_page": {
						"type": "number",
						"format": "double"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/Media"
						},
						"type": "array"
					}
				},
				"required": [
					"total",
					"per_page",
					"current_page",
					"last_page",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_Pagination_Media__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Pagination_Media_"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_File_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/File"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Token": {
				"properties": {
					"refreshToken": {
						"type": "string",
						"nullable": true
					},
					"accessToken": {
						"type": "string",
						"nullable": true
					},
					"expires_in": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"refreshToken",
					"accessToken",
					"expires_in"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_Token_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Token"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_boolean_": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"type": "boolean"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse__accessToken-string-or-null--expires_in-number--refreshToken-string__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"properties": {
							"refreshToken": {
								"type": "string"
							},
							"expires_in": {
								"type": "number",
								"format": "double"
							},
							"accessToken": {
								"type": "string",
								"nullable": true
							}
						},
						"required": [
							"refreshToken",
							"expires_in",
							"accessToken"
						],
						"type": "object"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_Partial_User__": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"errors": {},
					"data": {
						"$ref": "#/components/schemas/Partial_User_"
					}
				},
				"required": [
					"code",
					"success"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"description": "Enter the token with the `Bearer: ` prefix, e.g. Bearer abcde12345"
			},
			"Cookie": {
				"type": "apiKey",
				"name": "token",
				"in": "cookie"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "0.0.1",
		"description": "server",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_User_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserPayload"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Pagination_User__"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_User_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_User_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_User_"
							}
						}
					}
				}
			}
		},
		"/users/role/{id}": {
			"get": {
				"operationId": "GetUserByRoleId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Pagination_User__"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/roles": {
			"post": {
				"operationId": "CreateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Role_"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRolePayload"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetRoles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Array_Role__"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": []
			}
		},
		"/roles/{id}": {
			"get": {
				"operationId": "GetRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Role_"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Role_"
								}
							}
						}
					}
				},
				"tags": [
					"Role"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IRolePayload_"
							}
						}
					}
				}
			}
		},
		"/permissions": {
			"post": {
				"operationId": "CreatePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Permissions_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IPermissionPayload"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetPermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Array_Permissions__"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": []
			}
		},
		"/permissions/list": {
			"get": {
				"operationId": "GetList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Array_string__"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": []
			}
		},
		"/permissions/{id}": {
			"get": {
				"operationId": "GetPermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Permissions_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdatePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Permissions_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IPermissionPayload_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeletePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Permissions_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/files": {
			"get": {
				"operationId": "GetFiles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Pagination_Media__"
								}
							}
						}
					}
				},
				"tags": [
					"File"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_File_"
								}
							}
						}
					}
				},
				"tags": [
					"File"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"files": {
										"items": {
											"type": "string",
											"format": "binary"
										},
										"type": "array"
									}
								},
								"required": [
									"files"
								]
							}
						}
					}
				}
			}
		},
		"/files/download/u/{uuid}": {
			"get": {
				"operationId": "DownloadFile",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"File"
				],
				"security": [],
				"parameters": []
			}
		},
		"/files/{yyyy}/{mm}/{dd}/{name}": {
			"get": {
				"operationId": "GetFile",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"File"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Token_"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"username": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"username"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserPayload"
							}
						}
					}
				}
			}
		},
		"/auth/refresh-token": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse__accessToken-string-or-null--expires_in-number--refreshToken-string__"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"required": [
									"refreshToken"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "GetMe",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_Partial_User__"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [
					{
						"Bearer": []
					},
					{
						"Cookie": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}