{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"username",
					"email",
					"password",
					"firstName",
					"lastName",
					"role",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Role": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"root": {
						"type": "boolean"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/Permissions"
						},
						"type": "array"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"root",
					"users",
					"permissions",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Permissions": {
				"properties": {
					"id": {
						"type": "string"
					},
					"role_id": {
						"type": "string"
					},
					"resource": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"createAt": {
						"type": "string",
						"format": "date-time"
					},
					"updateAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"role_id",
					"resource",
					"value",
					"role",
					"createAt",
					"updateAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.id-or-createAt-or-updateAt__": {
				"properties": {
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"username",
					"email",
					"password",
					"firstName",
					"lastName",
					"role"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id-or-createAt-or-updateAt_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id-or-createAt-or-updateAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IUserPayload": {
				"$ref": "#/components/schemas/Omit_User.id-or-createAt-or-updateAt_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "server",
		"version": "0.0.1",
		"description": "server",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserPayload"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}